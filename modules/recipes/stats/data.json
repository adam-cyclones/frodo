{
    "oauth_client": {
        "coreOAuth2ClientConfig": {
            "userpassword": "${OAUTH_CLIENT_PASSWORD}",
            "loopbackInterfaceRedirection": false,
            "scopes": ["fr:idm:*"],
            "accessTokenLifetime": 315576000,
            "redirectionUris": ["${TENANT}/platform/appAuthHelperRedirect.html"],
            "clientType": "Confidential"
        },
        "advancedOAuth2ClientConfig": {
            "responseTypes": ["token"],
            "javascriptOrigins": ["${TENANT}", "${TENANT}:443"],
            "tokenEndpointAuthMethod": "client_secret_post",
            "grantTypes": ["authorization_code", "refresh_token", "password"]
        },
        "signEncOAuth2ClientConfig": {
            "tokenIntrospectionResponseFormat": "JSON"
        }
    },
    "stats_user": {
        "userName": "_stats",
        "accountStatus": "active",
        "givenName": "_stats",
        "sn": "_stats",
        "mail": "_stats@example.com",
        "frIndexedString1": null
    },
    "role_payload": {
        "_ref": "internal/role/openidm-admin",
        "_refProperties": {}
    },
    "managed": [{
            "name": "_hourly",
            "schema": {
                "$schema": "http://forgerock.org/json-schema#",
                "description": "Stores hourly event numbers for the last 24 hours",
                "icon": "fa-database",
                "order": [
                    "_hour",
                    "_auth",
                    "_registration",
                    "_passwordreset"
                ],
                "properties": {
                    "_auth": {
                        "deleteQueryConfig": false,
                        "description": null,
                        "isVirtual": false,
                        "order": [
                            "_success",
                            "_failure"
                        ],
                        "properties": {
                            "_failure": {
                                "searchable": true,
                                "title": null,
                                "type": "number",
                                "userEditable": true,
                                "viewable": false
                            },
                            "_success": {
                                "searchable": true,
                                "title": null,
                                "type": "number",
                                "userEditable": true,
                                "viewable": false
                            }
                        },
                        "searchable": false,
                        "title": null,
                        "type": "object",
                        "userEditable": true,
                        "viewable": false
                    },
                    "_hour": {
                        "default": 0,
                        "deleteQueryConfig": false,
                        "description": "Hour of the _day this record represents",
                        "isVirtual": false,
                        "searchable": true,
                        "title": "Hour of Day",
                        "type": "number",
                        "userEditable": true,
                        "viewable": true
                    },
                    "_passwordreset": {
                        "deleteQueryConfig": false,
                        "description": null,
                        "isVirtual": false,
                        "order": [
                            "_success",
                            "_failure"
                        ],
                        "properties": {
                            "_failure": {
                                "searchable": true,
                                "title": null,
                                "type": "number",
                                "userEditable": true,
                                "viewable": false
                            },
                            "_success": {
                                "searchable": true,
                                "title": null,
                                "type": "number",
                                "userEditable": true,
                                "viewable": false
                            }
                        },
                        "searchable": false,
                        "title": null,
                        "type": "object",
                        "userEditable": true,
                        "viewable": false
                    },
                    "_registration": {
                        "deleteQueryConfig": false,
                        "description": null,
                        "isVirtual": false,
                        "order": [
                            "_success",
                            "_failure"
                        ],
                        "properties": {
                            "_failure": {
                                "searchable": true,
                                "title": null,
                                "type": "number",
                                "userEditable": true,
                                "viewable": false
                            },
                            "_success": {
                                "searchable": true,
                                "title": null,
                                "type": "number",
                                "userEditable": true,
                                "viewable": false
                            }
                        },
                        "searchable": false,
                        "title": null,
                        "type": "object",
                        "userEditable": true,
                        "viewable": false
                    }
                },
                "required": [],
                "title": null,
                "type": "object"
            }
        },
        {
            "name": "_daily",
            "schema": {
                "$schema": "http://forgerock.org/json-schema#",
                "description": "Stores daily event numbers for the last 30 days",
                "icon": "fa-database",
                "order": [
                    "_day",
                    "_auth",
                    "_registration",
                    "_passwordreset"
                ],
                "properties": {
                    "_auth": {
                        "deleteQueryConfig": false,
                        "description": null,
                        "isVirtual": false,
                        "order": [
                            "_success",
                            "_failure"
                        ],
                        "properties": {
                            "_failure": {
                                "searchable": true,
                                "title": null,
                                "type": "number",
                                "userEditable": true,
                                "viewable": false
                            },
                            "_success": {
                                "searchable": true,
                                "title": null,
                                "type": "number",
                                "userEditable": true,
                                "viewable": false
                            }
                        },
                        "searchable": false,
                        "title": null,
                        "type": "object",
                        "userEditable": true,
                        "viewable": false
                    },
                    "_day": {
                        "default": 0,
                        "deleteQueryConfig": false,
                        "description": "Day of month this record represents",
                        "isVirtual": false,
                        "searchable": true,
                        "title": "Day of Month",
                        "type": "number",
                        "userEditable": true,
                        "viewable": true
                    },
                    "_passwordreset": {
                        "deleteQueryConfig": false,
                        "description": null,
                        "isVirtual": false,
                        "order": [
                            "_success",
                            "_failure"
                        ],
                        "properties": {
                            "_failure": {
                                "searchable": true,
                                "title": null,
                                "type": "number",
                                "userEditable": true,
                                "viewable": false
                            },
                            "_success": {
                                "searchable": true,
                                "title": null,
                                "type": "number",
                                "userEditable": true,
                                "viewable": false
                            }
                        },
                        "searchable": false,
                        "title": null,
                        "type": "object",
                        "userEditable": true,
                        "viewable": false
                    },
                    "_registration": {
                        "deleteQueryConfig": false,
                        "description": null,
                        "isVirtual": false,
                        "order": [
                            "_success",
                            "_failure"
                        ],
                        "properties": {
                            "_failure": {
                                "searchable": true,
                                "title": null,
                                "type": "number",
                                "userEditable": true,
                                "viewable": false
                            },
                            "_success": {
                                "searchable": true,
                                "title": null,
                                "type": "number",
                                "userEditable": true,
                                "viewable": false
                            }
                        },
                        "searchable": false,
                        "title": null,
                        "type": "object",
                        "userEditable": true,
                        "viewable": false
                    }
                },
                "required": [],
                "title": null,
                "type": "object"
            }
        }
    ],
    "journeys": [{
        "origin": "f89926d2a62433565dfde0ba7e31e86e",
        "innernodes": {},
        "scripts": {
            "9b0a3f25-06d1-4b62-9db6-2f4881a5916e": {
                "_id": "9b0a3f25-06d1-4b62-9db6-2f4881a5916e",
                "name": "LogEventInIDM",
                "description": "null",
                "script": "dmFyIGlkbUVuZHBvaW50SG91cmx5ID0gImh0dHBzOi8vb3BlbmFtLXNhbmRlZXAtZGV2LmZvcmdlYmxvY2tzLmNvbS9vcGVuaWRtL21hbmFnZWQvX2hvdXJseS8iOwp2YXIgaWRtRW5kcG9pbnREYWlseSA9ICJodHRwczovL29wZW5hbS1zYW5kZWVwLWRldi5mb3JnZWJsb2Nrcy5jb20vb3BlbmlkbS9tYW5hZ2VkL19kYWlseS8iOwp2YXIgY29uZmlnID0gewogICAgQUNDRVNTX1RPS0VOX1NUQVRFX0ZJRUxEOiAiaWRtQWNjZXNzVG9rZW4iLAogICAgbm9kZU5hbWU6ICIqKipMb2dFdmVudEluSURNIgp9Owp2YXIgTm9kZU91dGNvbWUgPSB7CiAgICBTVUNDRVNTOiAic3VjY2VzcyIsCiAgICBFUlJPUjogImVycm9yIgp9OwoKZnVuY3Rpb24gbG9nUmVzcG9uc2UocmVzcG9uc2UpIHsKICAgIGxvZ2dlci5tZXNzYWdlKGNvbmZpZy5ub2RlTmFtZSArICI6IFNjcmlwdGVkIE5vZGUgSFRUUCBSZXNwb25zZTogIiArIHJlc3BvbnNlLmdldFN0YXR1cygpICsgIiwgQm9keTogIiArIHJlc3BvbnNlLmdldEVudGl0eSgpLmdldFN0cmluZygpKTsKfQoKZnVuY3Rpb24gTG9nRXZlbnQoYWNjZXNzVG9rZW4sIGV2ZW50VHlwZSwgZXZlbnRPdXRjb21lKSB7Cgl2YXIgZCA9IG5ldyBEYXRlKCk7Cgl2YXIgaCA9IGQuZ2V0VVRDSG91cnMoKTsKICAgIHZhciBkdCA9IGQuZ2V0VVRDRGF0ZSgpOwoJdmFyIHJlcXVlc3RCb2R5SnNvbiA9IFt7CiAgICAJb3BlcmF0aW9uOiAiaW5jcmVtZW50IiwKICAgIAlmaWVsZDogIi8iK2V2ZW50VHlwZSsiLyIrZXZlbnRPdXRjb21lLAogICAgCXZhbHVlOiAxCiAgCX1dOwoKCXRyeSB7CiAgICAJdmFyIHJlcXVlc3QxID0gbmV3IG9yZy5mb3JnZXJvY2suaHR0cC5wcm90b2NvbC5SZXF1ZXN0KCk7CiAgICAgICAgcmVxdWVzdDEuc2V0TWV0aG9kKCdQQVRDSCcpOwogICAgICAgIHJlcXVlc3QxLnNldFVyaShpZG1FbmRwb2ludEhvdXJseSArIGgpOwogICAgICAgIHJlcXVlc3QxLmdldEhlYWRlcnMoKS5hZGQoIkF1dGhvcml6YXRpb24iLCAiQmVhcmVyICIgKyBhY2Nlc3NUb2tlbik7CiAgICAgICAgcmVxdWVzdDEuZ2V0SGVhZGVycygpLmFkZCgiQ29udGVudC1UeXBlIiwgImFwcGxpY2F0aW9uL2pzb24iKTsKICAgICAgICByZXF1ZXN0MS5zZXRFbnRpdHkocmVxdWVzdEJvZHlKc29uKTsKICAgICAgICByZXNwb25zZTEgPSBodHRwQ2xpZW50LnNlbmQocmVxdWVzdDEpLmdldCgpOwoKICAgIAl2YXIgcmVxdWVzdDIgPSBuZXcgb3JnLmZvcmdlcm9jay5odHRwLnByb3RvY29sLlJlcXVlc3QoKTsKICAgICAgICByZXF1ZXN0Mi5zZXRNZXRob2QoJ1BBVENIJyk7CiAgICAgICAgcmVxdWVzdDIuc2V0VXJpKGlkbUVuZHBvaW50RGFpbHkgKyBkdCk7CiAgICAgICAgcmVxdWVzdDIuZ2V0SGVhZGVycygpLmFkZCgiQXV0aG9yaXphdGlvbiIsICJCZWFyZXIgIiArIGFjY2Vzc1Rva2VuKTsKICAgICAgICByZXF1ZXN0Mi5nZXRIZWFkZXJzKCkuYWRkKCJDb250ZW50LVR5cGUiLCAiYXBwbGljYXRpb24vanNvbiIpOwogICAgICAgIHJlcXVlc3QyLnNldEVudGl0eShyZXF1ZXN0Qm9keUpzb24pOwogICAgICAgIHJlc3BvbnNlMiA9IGh0dHBDbGllbnQuc2VuZChyZXF1ZXN0MikuZ2V0KCk7CgogICAgfSBjYXRjaCAoZSkgewogICAgCWxvZ2dlci5lcnJvcihjb25maWcubm9kZU5hbWUgKyAiOiBVbmFibGUgdG8gY2FsbCBJRE0gRW1haWwgZW5kcG9pbnQuIEV4Y2VwdGlvbjogIiArIGUpOwogICAgICAgIHJldHVybiBldmVudE91dGNvbWU9PSJzdWNjZXNzIj9Ob2RlT3V0Y29tZS5TVUNDRVNTOk5vZGVPdXRjb21lLkVSUk9SOwoJfQoJCiAgCS8vbG9nUmVzcG9uc2UocmVzcG9uc2UpOwogICAgaWYgKHJlc3BvbnNlMS5nZXRTdGF0dXMoKS5nZXRDb2RlKCkgPT09IDIwMCAmJiByZXNwb25zZTIuZ2V0U3RhdHVzKCkuZ2V0Q29kZSgpID09PSAyMDApIHsKICAgICAgICByZXR1cm4gZXZlbnRPdXRjb21lPT0ic3VjY2VzcyI/Tm9kZU91dGNvbWUuU1VDQ0VTUzpOb2RlT3V0Y29tZS5FUlJPUjsKICAgIH0gZWxzZSB7CiAgICAgICAgbG9nZ2VyLmVycm9yKGNvbmZpZy5ub2RlTmFtZSArICIgdW5hYmxlIHRvIGxvZyBldmVudC4gSFRUUCBSZXN1bHQ6ICIgKyByZXNwb25zZTEuZ2V0U3RhdHVzKCkgKyAiICIgKyByZXNwb25zZTIuZ2V0U3RhdHVzKCkpOwogICAgICAgIHJldHVybiBldmVudE91dGNvbWU9PSJzdWNjZXNzIj9Ob2RlT3V0Y29tZS5TVUNDRVNTOk5vZGVPdXRjb21lLkVSUk9SOwogICAgfQp9Cgpsb2dnZXIubWVzc2FnZShjb25maWcubm9kZU5hbWUgKyAiOiBub2RlIGV4ZWN1dGluZyIpOwp2YXIgYWNjZXNzVG9rZW47Cgp2YXIgZXZlbnRUeXBlID0gc2hhcmVkU3RhdGUuZ2V0KCJldmVudFR5cGUiKTsKdmFyIGV2ZW50T3V0Y29tZSA9IHNoYXJlZFN0YXRlLmdldCgiZXZlbnRPdXRjb21lIik7CgphY2Nlc3NUb2tlbiA9ICIke0FDQ0VTU19UT0tFTn0iOwpvdXRjb21lID0gTG9nRXZlbnQoYWNjZXNzVG9rZW4sIGV2ZW50VHlwZSwgZXZlbnRPdXRjb21lKTs=",
                "default": false,
                "language": "JAVASCRIPT",
                "context": "AUTHENTICATION_TREE_DECISION_NODE",
                "createdBy": "null",
                "creationDate": 0,
                "lastModifiedBy": "null",
                "lastModifiedDate": 0
            }
        },
        "emailTemplates": {},
        "nodes": {
            "23cc790f-4363-4b2e-816d-67eb84dfeca6": {
                "_id": "23cc790f-4363-4b2e-816d-67eb84dfeca6",
                "inputs": [
                    "*"
                ],
                "outcomes": [
                    "success",
                    "error"
                ],
                "outputs": [
                    "*"
                ],
                "script": "9b0a3f25-06d1-4b62-9db6-2f4881a5916e",
                "_type": {
                    "_id": "ScriptedDecisionNode",
                    "name": "Scripted Decision",
                    "collection": true
                },
                "_outcomes": [{
                        "id": "success",
                        "displayName": "success"
                    },
                    {
                        "id": "error",
                        "displayName": "error"
                    }
                ]
            }
        },
        "tree": {
            "_id": "LogEvent",
            "entryNodeId": "23cc790f-4363-4b2e-816d-67eb84dfeca6",
            "nodes": {
                "23cc790f-4363-4b2e-816d-67eb84dfeca6": {
                    "x": 546,
                    "y": 108.015625,
                    "connections": {
                        "error": "e301438c-0bd0-429c-ab0c-66126501069a",
                        "success": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
                    },
                    "nodeType": "ScriptedDecisionNode",
                    "displayName": "Log Event in IDM"
                }
            },
            "staticNodes": {
                "startNode": {
                    "x": 50,
                    "y": 250
                },
                "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
                    "x": 977,
                    "y": 78
                },
                "e301438c-0bd0-429c-ab0c-66126501069a": {
                    "x": 981,
                    "y": 206
                }
            },
            "identityResource": "managed/alpha_user",
            "uiConfig": {}
        }
    }],
    "schedule": {
        "_id": "myschedule",
        "enabled": true,
        "persisted": true,
        "recoverable": false,
        "misfirePolicy": "fireAndProceed",
        "schedule": "0 0 0 * * ?",
        "repeatInterval": 0,
        "repeatCount": 0,
        "type": "cron",
        "invokeService": "script",
        "invokeContext": {
            "script": {
                "type": "text/javascript",
                "globals": {},
                "source": "(function () {\n    var start = Date.now();\n    var d = new Date();\n    var dt = d.getUTCDate();\n    logger.debug(\"Stats: start\");\n\n    var pageSize = 10;\n    var endpoint = \"managed/daily_response/\"+dt;\n\n    initialize();\n\n    var managedJson = openidm.read(\"config/managed\", null, [\"*\"]);\n\n    var tenantStats = {\n        \"tenant\": {\n            \"teammembers\": countUsers(\"teammember\"),\n            \"roles\": countInternalRoles(),\n            \"other\": countCustomObjects(managedJson, null)\n        },\n        \"realms\": {\n            \"alpha\": {\n                \"users\": countUsers(\"alpha_user\"),\n                \"roles\": countRoles(\"alpha_role\"),\n                \"organizations\": countOrganizations(\"alpha_organization\"),\n                \"assignments\": countAssignments(\"alpha_assignment\"),\n                \"other\": countCustomObjects(managedJson, \"alpha\")\n            },\n            \"bravo\": {\n                \"users\": countUsers(\"bravo_user\"),\n                \"roles\": countRoles(\"bravo_role\"),\n                \"organizations\": countOrganizations(\"bravo_organization\"),\n                \"assignments\": countAssignments(\"bravo_assignment\"),\n                \"other\": countCustomObjects(managedJson, \"bravo\")\n            }\n        },\n        \"elapsed\": (Date.now() - start)\n        // \"date\": getGeneralizedTime(new Date())\n    };\n\n    openidm.patch(endpoint, null, [{operation: \"replace\", field:\"/stats\", value: tenantStats}]);\n    logger.debug(\"Stats: {}\", JSON.stringify(tenantStats));\n    /*\n     * check if schema and objects for event counts exist\n     * if they exist, skip, if not, create\n     *\n     */\n    function initialize() {\n        var counter = 0;\n        var managed = null;\n        var hourly_response = null;\n        var daily_response = null;\n        var hourly_present = false;\n        var daily_present = false;\n        var hourly_schema = {\n            \"name\": \"_hourly\",\n            \"schema\": {\n                \"$schema\": \"http://forgerock.org/json-schema#\",\n                \"description\": \"Stores hourly event numbers for the last 24 hours\",\n                \"icon\": \"fa-database\",\n                \"order\": [\n                    \"_hour\",\n                    \"_auth\",\n                    \"_registration\",\n                    \"_passwordreset\"\n                ],\n                \"properties\": {\n                    \"_auth\": {\n                        \"deleteQueryConfig\": false,\n                        \"description\": null,\n                        \"isVirtual\": false,\n                        \"order\": [\n                            \"_success\",\n                            \"_failure\"\n                        ],\n                        \"properties\": {\n                            \"_failure\": {\n                                \"searchable\": true,\n                                \"title\": null,\n                                \"type\": \"number\",\n                                \"userEditable\": true,\n                                \"viewable\": false\n                            },\n                            \"_success\": {\n                                \"searchable\": true,\n                                \"title\": null,\n                                \"type\": \"number\",\n                                \"userEditable\": true,\n                                \"viewable\": false\n                            }\n                        },\n                        \"searchable\": false,\n                        \"title\": null,\n                        \"type\": \"object\",\n                        \"userEditable\": true,\n                        \"viewable\": false\n                    },\n                    \"_hour\": {\n                        \"default\": 0,\n                        \"deleteQueryConfig\": false,\n                        \"description\": \"Hour of the _day this record represents\",\n                        \"isVirtual\": false,\n                        \"searchable\": true,\n                        \"title\": \"Hour of Day\",\n                        \"type\": \"number\",\n                        \"userEditable\": true,\n                        \"viewable\": true\n                    },\n                    \"_passwordreset\": {\n                        \"deleteQueryConfig\": false,\n                        \"description\": null,\n                        \"isVirtual\": false,\n                        \"order\": [\n                            \"_success\",\n                            \"_failure\"\n                        ],\n                        \"properties\": {\n                            \"_failure\": {\n                                \"searchable\": true,\n                                \"title\": null,\n                                \"type\": \"number\",\n                                \"userEditable\": true,\n                                \"viewable\": false\n                            },\n                            \"_success\": {\n                                \"searchable\": true,\n                                \"title\": null,\n                                \"type\": \"number\",\n                                \"userEditable\": true,\n                                \"viewable\": false\n                            }\n                        },\n                        \"searchable\": false,\n                        \"title\": null,\n                        \"type\": \"object\",\n                        \"userEditable\": true,\n                        \"viewable\": false\n                    },\n                    \"_registration\": {\n                        \"deleteQueryConfig\": false,\n                        \"description\": null,\n                        \"isVirtual\": false,\n                        \"order\": [\n                            \"_success\",\n                            \"_failure\"\n                        ],\n                        \"properties\": {\n                            \"_failure\": {\n                                \"searchable\": true,\n                                \"title\": null,\n                                \"type\": \"number\",\n                                \"userEditable\": true,\n                                \"viewable\": false\n                            },\n                            \"_success\": {\n                                \"searchable\": true,\n                                \"title\": null,\n                                \"type\": \"number\",\n                                \"userEditable\": true,\n                                \"viewable\": false\n                            }\n                        },\n                        \"searchable\": false,\n                        \"title\": null,\n                        \"type\": \"object\",\n                        \"userEditable\": true,\n                        \"viewable\": false\n                    }\n                },\n                \"required\": [],\n                \"title\": null,\n                \"type\": \"object\"\n            }\n        };\n        var daily_schema = {\n            \"name\": \"_daily\",\n            \"schema\": {\n                \"$schema\": \"http://forgerock.org/json-schema#\",\n                \"description\": \"Stores daily event numbers for the last 30 days\",\n                \"icon\": \"fa-database\",\n                \"order\": [\n                    \"_day\",\n                    \"_auth\",\n                    \"_registration\",\n                    \"_passwordreset\"\n                ],\n                \"properties\": {\n                    \"_auth\": {\n                        \"deleteQueryConfig\": false,\n                        \"description\": null,\n                        \"isVirtual\": false,\n                        \"order\": [\n                            \"_success\",\n                            \"_failure\"\n                        ],\n                        \"properties\": {\n                            \"_failure\": {\n                                \"searchable\": true,\n                                \"title\": null,\n                                \"type\": \"number\",\n                                \"userEditable\": true,\n                                \"viewable\": false\n                            },\n                            \"_success\": {\n                                \"searchable\": true,\n                                \"title\": null,\n                                \"type\": \"number\",\n                                \"userEditable\": true,\n                                \"viewable\": false\n                            }\n                        },\n                        \"searchable\": false,\n                        \"title\": null,\n                        \"type\": \"object\",\n                        \"userEditable\": true,\n                        \"viewable\": false\n                    },\n                    \"_day\": {\n                        \"default\": 0,\n                        \"deleteQueryConfig\": false,\n                        \"description\": \"Day of month this record represents\",\n                        \"isVirtual\": false,\n                        \"searchable\": true,\n                        \"title\": \"Day of Month\",\n                        \"type\": \"number\",\n                        \"userEditable\": true,\n                        \"viewable\": true\n                    },\n                    \"_passwordreset\": {\n                        \"deleteQueryConfig\": false,\n                        \"description\": null,\n                        \"isVirtual\": false,\n                        \"order\": [\n                            \"_success\",\n                            \"_failure\"\n                        ],\n                        \"properties\": {\n                            \"_failure\": {\n                                \"searchable\": true,\n                                \"title\": null,\n                                \"type\": \"number\",\n                                \"userEditable\": true,\n                                \"viewable\": false\n                            },\n                            \"_success\": {\n                                \"searchable\": true,\n                                \"title\": null,\n                                \"type\": \"number\",\n                                \"userEditable\": true,\n                                \"viewable\": false\n                            }\n                        },\n                        \"searchable\": false,\n                        \"title\": null,\n                        \"type\": \"object\",\n                        \"userEditable\": true,\n                        \"viewable\": false\n                    },\n                    \"_registration\": {\n                        \"deleteQueryConfig\": false,\n                        \"description\": null,\n                        \"isVirtual\": false,\n                        \"order\": [\n                            \"_success\",\n                            \"_failure\"\n                        ],\n                        \"properties\": {\n                            \"_failure\": {\n                                \"searchable\": true,\n                                \"title\": null,\n                                \"type\": \"number\",\n                                \"userEditable\": true,\n                                \"viewable\": false\n                            },\n                            \"_success\": {\n                                \"searchable\": true,\n                                \"title\": null,\n                                \"type\": \"number\",\n                                \"userEditable\": true,\n                                \"viewable\": false\n                            }\n                        },\n                        \"searchable\": false,\n                        \"title\": null,\n                        \"type\": \"object\",\n                        \"userEditable\": true,\n                        \"viewable\": false\n                    }\n                },\n                \"required\": [],\n                \"title\": null,\n                \"type\": \"object\"\n            }\n        };\n\n        managed = openidm.read(\"config/managed\");\n        managed.objects.forEach(function(o) {\n            if(o.name == \"_hourly\") {\n                logger.debug(\"Stats - found _hourly schema\");\n                hourly_present = true;\n            }\n            if(o.name == \"_daily\") {\n                logger.debug(\"Stats - found _daily schema\");\n                daily_present = true;\n            }\n        });\n        if(!hourly_present || !daily_present) {\n            if(!hourly_present) {\n                // hourly schema not present, create it\n                logger.debug(\"Stats - _hourly schema not found, creating\");\n                managed.objects.push(hourly_schema);\n            }\n            if (!daily_present) {\n                // daily schema not present, create it\n                logger.debug(\"Stats - _daily schema not found, creating\");\n                managed.objects.push(daily_schema);\n            }\n            openidm.update(\"config/managed\", null, managed);\n        }\n        managed = openidm.read(\"config/managed\");\n\n        hourly_response = openidm.query(\"managed/_hourly\", {\"_queryFilter\": \"true\"});\n        if(hourly_response.result.length == 24) {\n            logger.debug(\"Stats - required _hourly managed objects found\");\n            daily_response = openidm.query(\"managed/_daily\", {\"_queryFilter\": \"true\"});\n            if(daily_response.result.length == 31) {\n                logger.debug(\"Stats - required _hourly managed objects found\");\n                // already initialized, nothing to do\n                logger.debug(\"Stats - already initialized, nothing to do\");\n                return;\n            }\n        }\n        logger.debug(\"Stats - required managed objects not found, creating\");\n        var payload = {\n            \"_auth\": {\n                \"_success\": 0,\n                \"_failure\": 0\n            },\n            \"_registration\": {\n                \"_success\": 0,\n                \"_failure\": 0\n            },\n            \"_passwordreset\": {\n                \"_success\": 0,\n                \"_failure\": 0\n            }\n        };\n        for(counter=0; counter<24; counter++) {\n            result = openidm.create(\"managed/_hourly\", \"\"+counter, payload);\n            logger.debug(\"Stats - created required _hourly objects\");\n        }\n        for(counter=1; counter<=31; counter++) {\n            result = openidm.create(\"managed/_daily\", \"\"+counter, payload);\n            logger.debug(\"Stats - created required _daily objects\");\n        }    \n    }\n\n    /*\n     * Convert a Date object to the generalized time format used in LDAP directories\n     *\n     * e.g.: 20201009093416Z\n     */\n    function getGeneralizedTime(date) {\n        var generalizedTime = (\"\")\n            .concat(date.getFullYear())\n            .concat(pad(date.getMonth()+1,2))\n            .concat(pad(date.getDate(),2))\n            .concat(pad(date.getHours(),2))\n            .concat(pad(date.getMinutes(),2))\n            .concat(pad(date.getSeconds(),2))\n            .concat(\"Z\").toString();\n        return generalizedTime;\n    }\n\n    /*\n     * Pad a number with leading zeroes\n     *\n     * e.g.: pad(21,5) = 00021\n     */\n    function pad(num, size) {\n        var s = \"0000000000\" + num;\n        return s.substr(s.length-size);\n    }\n\n    function countUsers(moType) {\n        var start = Date.now();\n        var stats = {\n            \"type\": moType,\n            \"total\": 0,\n            \"active\": 0,\n            \"elapsed\": 0,\n            // \"date\": 0\n        };\n        var result = {\n            \"result\": [],\n            \"resultCount\": 0,\n            \"pagedResultsCookie\": null,\n            \"totalPagedResultsPolicy\": \"NONE\",\n            \"totalPagedResults\": -1,\n            \"remainingPagedResults\": -1\n        };\n        var params = {\n            \"_queryFilter\": \"true\",\n            \"_pageSize\": pageSize\n        };\n        do {\n            if (result && result.pagedResultsCookie) {\n                params[\"_pagedResultsCookie\"] = result.pagedResultsCookie;\n            }\n            result = openidm.query(\"managed/\"+moType, params, [\"accountStatus\"]);\n            stats.total += result.resultCount;\n            stats.active += result.result.filter(value => (value.accountStatus === 'active' || value.accountStatus === 'Active')).length;\n        }\n        while (result.pagedResultsCookie);\n\n        // stats.date = getGeneralizedTime(new Date());\n        stats.elapsed = (Date.now() - start);\n        //logger.debug(\"Stats: countUsers: {}: stats: {}\", moType, stats);\n        return stats;\n    }\n\n    function countInternalRoles() {\n        var start = Date.now();\n        var stats = {\n            \"type\": \"internal/role\",\n            \"total\": 0,\n            \"elapsed\": 0,\n            // \"date\": 0\n        };\n        var result = {\n            \"result\": [],\n            \"resultCount\": 0,\n            \"pagedResultsCookie\": null,\n            \"totalPagedResultsPolicy\": \"NONE\",\n            \"totalPagedResults\": -1,\n            \"remainingPagedResults\": -1\n        };\n        var params = {\n            \"_queryFilter\": \"true\",\n            \"_pageSize\": pageSize\n        };\n        do {\n            if (result && result.pagedResultsCookie) {\n                params[\"_pagedResultsCookie\"] = result.pagedResultsCookie;\n            }\n            result = openidm.query(\"internal/role\", params, [\"_id\"]);\n            stats.total += result.resultCount;\n        }\n        while (result.pagedResultsCookie);\n\n        // stats.date = getGeneralizedTime(new Date());\n        stats.elapsed = (Date.now() - start);\n        //logger.debug(\"Stats: countInternalRoles: {}: stats: {}\", moType, stats);\n        return stats;\n    }\n\n    function countRoles(moType) {\n        var start = Date.now();\n        var stats = {\n            \"type\": moType,\n            \"total\": 0,\n            \"used\": 0,\n            \"elapsed\": 0,\n            // \"date\": 0\n        };\n        var result = {\n            \"result\": [],\n            \"resultCount\": 0,\n            \"pagedResultsCookie\": null,\n            \"totalPagedResultsPolicy\": \"NONE\",\n            \"totalPagedResults\": -1,\n            \"remainingPagedResults\": -1\n        };\n        var params = {\n            \"_queryFilter\": \"true\",\n            \"_pageSize\": pageSize\n        };\n        do {\n            if (result && result.pagedResultsCookie) {\n                params[\"_pagedResultsCookie\"] = result.pagedResultsCookie;\n            }\n            result = openidm.query(\"managed/\"+moType, params, [\"members\"]);\n            stats.total += result.resultCount;\n            stats.used += result.result.filter(value => value.members.length > 0).length;\n        }\n        while (result.pagedResultsCookie);\n\n        // stats.date = getGeneralizedTime(new Date());\n        stats.elapsed = (Date.now() - start);\n        //logger.debug(\"Stats: countRoles: {}: stats: {}\", moType, stats);\n        return stats;\n    }\n\n    function countOrganizations(moType) {\n        var start = Date.now();\n        var stats = {\n            \"type\": moType,\n            \"total\": 0,\n            \"elapsed\": 0,\n            // \"date\": 0\n        };\n        var result = {\n            \"result\": [],\n            \"resultCount\": 0,\n            \"pagedResultsCookie\": null,\n            \"totalPagedResultsPolicy\": \"NONE\",\n            \"totalPagedResults\": -1,\n            \"remainingPagedResults\": -1\n        };\n        var params = {\n            \"_queryFilter\": \"true\",\n            \"_pageSize\": pageSize\n        };\n        do {\n            if (result && result.pagedResultsCookie) {\n                params[\"_pagedResultsCookie\"] = result.pagedResultsCookie;\n            }\n            result = openidm.query(\"managed/\"+moType, params, [\"members\"]);\n            stats.total += result.resultCount;\n        }\n        while (result.pagedResultsCookie);\n\n        // stats.date = getGeneralizedTime(new Date());\n        stats.elapsed = (Date.now() - start);\n        //logger.debug(\"Stats: countOrganizations: {}: stats: {}\", moType, stats);\n        return stats;\n    }\n\n    function countAssignments(moType) {\n        var start = Date.now();\n        var stats = {\n            \"type\": moType,\n            \"total\": 0,\n            \"elapsed\": 0,\n            // \"date\": 0\n        };\n        var result = {\n            \"result\": [],\n            \"resultCount\": 0,\n            \"pagedResultsCookie\": null,\n            \"totalPagedResultsPolicy\": \"NONE\",\n            \"totalPagedResults\": -1,\n            \"remainingPagedResults\": -1\n        };\n        var params = {\n            \"_queryFilter\": \"true\",\n            \"_pageSize\": pageSize\n        };\n        do {\n            if (result && result.pagedResultsCookie) {\n                params[\"_pagedResultsCookie\"] = result.pagedResultsCookie;\n            }\n            result = openidm.query(\"managed/\"+moType, params, [\"members\"]);\n            stats.total += result.resultCount;\n        }\n        while (result.pagedResultsCookie);\n\n        // stats.date = getGeneralizedTime(new Date());\n        stats.elapsed = (Date.now() - start);\n        //logger.debug(\"Stats: countAssignments: {}: stats: {}\", moType, stats);\n        return stats;\n    }\n\n    function countCustomObjects(managedJson, realm) {\n        var stats = [];\n        managedJson.objects.forEach(mo => {\n            logger.debug(\"Stats: countCustomObjects: {}: mo: {}\", realm, mo.name);\n            // filter out standard objects\n            if (realm != null && mo.name.startsWith(realm+\"_\") && mo.name != realm+\"_user\" && mo.name != realm+\"_role\" && mo.name != realm+\"_organization\" && mo.name != realm+\"_assignment\") {\n                stats.push(handleCustomObjects(mo.name));\n            }\n            else if (realm == null && mo.name != \"teammember\" && !mo.name.startsWith(\"alpha_\") && !mo.name.startsWith(\"bravo_\")) {\n                stats.push(handleCustomObjects(mo.name));\n            }\n        });\n        logger.debug(\"Stats: countCustomObjects: {}: stats: {}\", realm, stats);\n        return stats;\n    }\n\n    function handleCustomObjects(moName) {\n        var start = Date.now();\n        var stats = {\n            \"name\": moName,\n            \"total\": 0,\n            \"elapsed\": 0,\n            // \"date\": 0\n        };\n        var result = {\n            \"result\": [],\n            \"resultCount\": 0,\n            \"pagedResultsCookie\": null,\n            \"totalPagedResultsPolicy\": \"NONE\",\n            \"totalPagedResults\": -1,\n            \"remainingPagedResults\": -1\n        };\n        var params = {\n            \"_queryFilter\": \"true\",\n            \"_pageSize\": pageSize\n        };\n        do {\n            if (result && result.pagedResultsCookie) {\n                params[\"_pagedResultsCookie\"] = result.pagedResultsCookie;\n            }\n            result = openidm.query(\"managed/\"+moName, params, [\"members\"]);\n            stats.total += result.resultCount;\n        }\n        while (result.pagedResultsCookie);\n\n        // stats.date = getGeneralizedTime(new Date());\n        stats.elapsed = (Date.now() - start);\n        logger.debug(\"Stats: handleCustomObjects: {}: stats: {}\", moName, stats);\n        return stats;\n    }\n\n}());"
            }
        },
        "invokeLogLevel": "info",
        "startTime": null,
        "endTime": null,
        "concurrentExecution": false,
        "previousRunDate": null,
        "saveToConfig": false
    }
}